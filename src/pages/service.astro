---
import Layout from "../layouts/Layout.astro";
import Hero from "../components/Hero.astro";

let isError: boolean = false;

if (Astro.request.method === "POST") {
  try {
    isError = true;

    if (!isError) {
      return Astro.redirect("/dashboard");
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<Layout title="บริการ" businessName="โรงเรียนวัดนาหนอง">
  <Hero title="บริการ" description="ระบบสารสนเทศ" />
  <main class="container">
    <div class="section">
      <div class="content form">
        <h3 class="has-text-centered">เข้าสู่ระบบ</h3>
        <form method="POST">
          <div class="field">
            <label class="label" for="username">ชื่อผู้ใช้</label>
            <div class="control">
              <input
                class="input"
                type="text"
                placeholder="Username"
                id="username"
                name="username"
                required
              />
            </div>
          </div>
          <div class="field">
            <label class="label" for="password">รหัสผ่าน</label>
            <div class="control">
              <input
                class="input"
                type="password"
                placeholder="Password"
                id="password"
                name="password"
                required
              />
            </div>
          </div>
          <div class="field">
            <div class="control">
              <button type="submit" class="button is-link">เข้าสู่ระบบ</button>
            </div>
          </div>
        </form>
        {
          isError && (
            <div class="notification is-danger is-light">
              <button class="delete" />
              <p>ชื่อผู้ใช้และรหัสผ่านไม่ถูกต้อง</p>
              <p>โปรดติดต่อเจ้าหน้าที่หากลืมรหัสผ่าน</p>
            </div>
          )
        }
      </div>
    </div>
  </main>
</Layout>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    (document.querySelectorAll(".notification .delete") || []).forEach(
      ($delete) => {
        const $notification = $delete.parentNode;
        $delete.addEventListener("click", () => {
          $notification.parentNode.removeChild($notification);
        });
      },
    );
  });
</script>
